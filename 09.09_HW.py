# 1- Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, 
# стоящих на нечётной позиции.

# Пример:

# [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

my_list = [2, 3, 4, 5, 9, 23, 13]

# def list_of_num_that_i_need(list):
#   '''по идее должно бы создать новый лист исклчительно из чисел, стоящих на нечетных позициях в предыдущем списке'''
#     new_list = []
#     for i in list:
#        new_list.extend(list.index(i) % 2 > 0) вот здесь что-то не так пошло
#     return new_list

# здесь я попытался создать функцию, которая будет создавать новый список из нечетных чисел,
#чтобы красиво вставить его в ответ программы, но в итоге решил забить

# print(list_of_num_that_i_need(my_list))

#в итоге вот оно, решение задания: 

def sum_of_numbers(list):
    '''суммирует элементы на нечетных позициях'''
    sum = 0
    for i in list:
        if list.index(i) % 2 > 0:
            sum += i
    print(f'{my_list} -> сумма элементов на нечётных позициях: {sum}')


sum_of_numbers(my_list)

# 2-Напишите программу, которая найдёт произведение пар чисел списка. 
# Парой считаем первый и последний элемент, второй и предпоследний и т.д.

# Пример:

# [2, 3, 4, 5, 6] => [12, 15, 16];
# [2, 3, 5, 6] => [12, 15]

list = [2, 3, 4, 5, 6]

result_list = []
for i in range((len(list) + 1) // 2):
    result_list.append(list[i] * list[len(list) - 1 - i])
print(f'{list} => {result_list}')
#подглядел, сорян
    

# 3-Задайте список из вещественных чисел. Напишите программу, 
# которая найдёт разницу между максимальным и минимальным значением дробной части элементов.

# Пример:

# [1.1, 1.2, 3.1, 5.17, 10.02] => 0.18 или 18
# [4.07, 5.1, 8.2444, 6.98] - 0.91 или 91

list = [1.1, 1.2, 3.1, 5.17, 10.02]

def no_more_real_num(list):
    '''убирает целые числа из списка, оставляя все, что за запятой'''
    new_list = []
    for i in list:
        new_list.append(round(i % 1, 1))
    print(new_list)

def max_and_min(list):
    '''находит максимальный и минимальный элемент, в принте вычиатет их'''
    max = 0
    min = 1
    for i in list:    # вот здесь выдает ошибку: 'NoneType' object is not iterable'. Почему так и как это исправить. не понял, вроде все верно и должно работать???
        if  i >= max:
            max = i
        if i <= min:
            min = i
    print(max - min)


res = no_more_real_num(list)
max_and_min(res)




# 4- Напишите программу, которая будет преобразовывать десятичное число в двоичное. 
# Подумайте, как это можно решить с помощью рекурсии.

# Пример:

# 45 -> 101101
# 3 -> 11
# 2 -> 10

num = int(input('Введите свое число сюды: '))

def double_from_norm(num):
    '''рекурсивно переводит в двоичную систему заданное число'''
    if num >= 2:
        double_from_norm(num // 2)
    print(num % 2, end = '')

double_from_norm(num)

#решали такую задачу на си-шарпе, поэтому оказалось более-менее просто. Как вывести в строку уже подглядел


# 5-Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.

# Пример:

# для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21] Негафибоначчи
# Решение оформлять в виде функций
# По возможности добавляйте docstring

n = int(input('Введите свое число сюды: '))

def fibonacci(n):
    '''высосет вашу душу и найдет последовательность фибоначчи, в т.ч. отрицательную'''
    list_fib = []
    a, b = 1, 1
    for i in range(n-1):
        list_fib.append(a)
        a, b = b, a + b
    a, b = 0, 1
    for i in range (n):
        list_fib.insert(0, a)
        a, b = b, a - b
    return list_fib

list_fib = fibonacci(n)
print(fibonacci(n))
print(list_fib.index(0))

#снова каюсь, сам не справился  с фибоначчи, для меня это крайне мутная тема